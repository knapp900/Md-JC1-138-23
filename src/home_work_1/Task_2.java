package home_work_1;
/*
2. Изучить приоритетность операторов по таблице в презентации. Сначала посчитать результаты всех ниже приведённых примеров устно,
   а потом проверить в IDE (в случае ошибок свериться с таблицей приоритетов, повторять просчёт примеров до полного соответствия).
   Результатом МОЖЕТ БЫТЬ ОШИБКА компиляции, МОЖЕТ БЫТЬ ОШИБКА выполнения программы или корректный результат.Все значения в этих
   переменных должны быть записаны в int и boolean переменные. Напротив каждой строчки нужно написать комментарий с результатом
   и объяснением почему вы получили такой результат.
   Пояснение: ВНИМАНИЕ --8 значит что вам нужно создать переменную, например а, и проинициализировать её 8, а дальше её использовать
   как --а. Данная переменная во всех выражениях должна равняться 8;
	2.1 5 + 2 / 8
	2.2 (5 + 2) / 8
	2.3 (5 + 2++) / 8
	2.4 (5 + 2++) / --8
	2.5 (5 * 2 >> 2++) / --8
	2.6 (5 + 7 > 20 ? 68 : 22 * 2 >> 2++) / --8
	2.7 (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> 2++) / --8
	2.8 6 - 2 > 3 && 12 * 12 <= 119
	2.9 true && false
 */

public class Task_2 {

    public static void main(String[] args) {

        int eight = 8;
        int two = 2;
        int result;
        boolean booleanResult;
        // 2.1
        result = 5 + two / eight;
        System.out.println("5 + 2 / 8 = " + result); // 2 / 8 = 0.25 отбрасываем .25 и 5 + 0 = 5
        // 2.2
        result = (5 + two) / eight;
        System.out.println("(5 + 2) / 8 = " + result); // 5 + 2 = 7 и 7 / 8 = 0
        // 2.3
        result = (5 + two++) / eight;
        System.out.println("(5 + 2++) / 8 = " + result); // 7 / 8 = 0 two++ = 7 так как two++ постфиксный оператор;
        System.out.println("Переменная two = " + two + '\n' + "Переменная eight = " + eight);
        // 2.4
        result = (5 + two++) / --eight;
        System.out.println("(5 + 2++) / --8 = " + result); // 8 / 7 = 1
        System.out.println("Переменная two = " + two + '\n' + "Переменная eight = " + eight);
        // 2.5
        result = (5 * two >> two++) / --eight;
        System.out.println("(5 * 2 >> 2++) / --8 = " + result);
        System.out.println("Переменная two = " + two + '\n' + "Переменная eight = " + eight);
        // 2.6
        result = (5 + 7 > 20 ? 68 : 22 * two >> two++) / --eight;
        System.out.println("(5 + 7 > 20 ? 68 : 22 * 2 >> 2++) / --8 = " + result);
        System.out.println("Переменная two = " + two + '\n' + "Переменная eight = " + eight);
        /*
           2.7 Java не позволяет совмещать логические и арифметические операции и для компиляции я удалил (68 >= 68) в
           в тернарном операторе так как оно все равно выполнено не будет! false ? ---- :  22 * 6 >> 6++
         */
        result = (5 + 7 > 20 ? 68 : 22 * two >> two++);
        System.out.println("(5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> 2++) / --8 = " + result); // Результат 2
        System.out.println("Переменная two = " + two + '\n' + "Переменная eight = " + eight);
        // 2.8 (6 - 7 = -1 > 3 = false) выражение считается истинным, только если истинен каждый операнд
        booleanResult = 6 - two > 3 && 12 * 12 <= 119; //
        System.out.println("6 - 2 > 3 && 12 * 12 <= 119 = " + booleanResult);
        System.out.println("Переменная two = " + two + '\n' + "Переменная eight = " + eight);
        // 2.9 (true && false = false) так как выражение считается истинным, только если истинен каждый операнд
        booleanResult = true && false;
        System.out.println("true && false = " + booleanResult);


    }

}
