package home_work_6;

import home_work_6.data.GetPreparedTextFromTXTFileToStringArray;
import home_work_6.searchEngine.GetHighFrequencyWords;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import java.util.stream.Collectors;

public class CollectionsApp {
    public static void main(String[] args) {
        GetHighFrequencyWords frequencyWords =
                new GetHighFrequencyWords(
                        new GetPreparedTextFromTXTFileToStringArray("Война и мир_книга.txt")
                                .get());

        /*
        2.1 Найти в тексте все использованные слова и поместить их в коллекцию Set.
		Более подробное описание задачи, для понимания чего я хочу: Для решения данной задачи необходимо прочитать
		текстовый файл и поместить текст из данного текстового файла в строку. Далее данную строку необходимо обработать
		таким образом чтобы из неё можно было бы считывать слова. Далее каждое полученное слово поместить в Set.
		Благодаря возможностям Set'ов в итоге мы получим коллекцию содержащую набор слов который был использован при
		написании данного текста. В конце выводим в консоль количество использованных слов.
         */
        Set<String> setOfWords = new HashSet<>(Arrays
                .stream(new GetPreparedTextFromTXTFileToStringArray("Война и мир_книга.txt").get())
                .collect(Collectors.toList()));

        setOfWords.stream().
                forEach(s -> System.out.println(s));

        /*
        2.2 Найти в тексте топ N (настраиваемое значение) слов и вывести количество этих слов используя Map и List.
	    Отсортировать по количеству. Распечатать в консоль.
		Пример: Война - 200 раз, Мир - 100 раз и так далее. Знаки препинания, пробелы и переводы строк - это не слова.
		Более подробное описание задачи, для понимания чего я хочу: Для решения данной задачи необходимо прочитать
		текстовый файл  и поместить текст из данного текстового файла в строку.  Далее данную строку необходимо
		обработать таким образом чтобы из неё можно было бы считывать слова. Далее каждое полученное слово поместить как
		ключ в Map, а количество повторений в тексте ставить как значение. Для того чтобы это работало вам необходимо
		постоянно проверять наличие ключа в Map, и если нужный нам ключ уже присутсвует в нашей коллекции то мы должны
		увеличить уже имеющееся значение в коллекции на еденицу. После наполнения данной коллекции мы получим набор слов
		и их количество в тексте. Далее нам нужно придумать как отсортировать получившуюся коллекцию но к сожалению
		непосредственно эту коллекцию отсортировать не получится, придётся создавать для этого List и наполнять лист Entry из Map.
		В итоге из получившегося отсортированного набора данных вывести первые N записей.
         */
        System.out.println(frequencyWords.getTopNHighFrequencyWords(10));


    }
}
